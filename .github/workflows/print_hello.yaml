name: print hello

on: [push, pull_request]

jobs:
  build_wheels:
    name: Check on ${{ matrix.os }}
    env:
      boost_version: "1.76.0"
      python_version: "3.8"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Cancel previous runs on the same branch
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}

      - name: Set additional env value
        id: set_env_value
        run: |
          echo "workspace=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "root_workspace=$GITHUB_WORKSPACE/../" >> $GITHUB_ENV
          echo "boost_version_load=$(echo ${{ env.boost_version }} | sed "s/\./\_/g")"  >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        id: python-installer
        with:
          python-version: ${{ env.python_version }}

      - name: Cache boost
        id: cache-boost
        uses: actions/cache@v2
        with:
          path: |
            ~/boost
          key: ${{ runner.os }}-boost-more-cache7

      - name: echo1
        run: echo $GITHUB_WORKFLOW

      - name: Install boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          wget -nv -O boost.tar.gz https://boostorg.jfrog.io/artifactory/main/release/${{ env.boost_version }}/source/boost_${{ env.boost_version_load }}.tar.gz &&
          tar xzf boost.tar.gz -C ~/ &&
          cd ~/boost_${{ env.boost_version_load }}/ &&
          ./bootstrap.sh --with-python=/usr/bin/python${{ env.python_version }} --with-python-version=${{ env.python_version }} --prefix=~/boost &&
          ./b2 -j `nproc` &&  sudo ./b2 install -j `nproc`

      - name: echo1
        run: ls ~/

      - name: echo2
        run: cd ~/ && pwd

      - name: echo3
        run: ls ~/boost

      - name: cmake and build
        run: |
          mkdir build
          cd build
          cmake .. -DBOOST_ROOT=~/boost
          cmake --build . -- -j `nproc`
          cd ..
          export BOOST_ROOT=~/boost
          export BOOST_INCLUDE=~/boost/include
          export BOOST_LIBDIR=~/boost/lib
          python3 -m venv .venv
          . .venv/bin/activate
          pip3 install .
          pwd
          python3 ./test/test.py
